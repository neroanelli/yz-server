<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.dao.BdsStudentMapper">

	
	<resultMap type="java.util.HashMap" id="EnrollInfoMap">
		<id column="learn_id" property="learnId" jdbcType="VARCHAR" />
		<result column="std_name" property="stdName" jdbcType="VARCHAR" />
		<result column="id_card" property="idCard" jdbcType="VARCHAR" />
		<result column="pfsn_name" property="pfsnName" jdbcType="VARCHAR" />
		<result column="pfsn_level" property="pfsnLevel" jdbcType="VARCHAR" />
		<result column="recruit_type" property="recruitType" jdbcType="VARCHAR" />
		<result column="ta_name" property="taName" jdbcType="VARCHAR" />
		<result column="unvs_name" property="unvsName" jdbcType="VARCHAR" />
		<result column="grade" property="grade" jdbcType="VARCHAR" />
		<result column="nation" property="nation" jdbcType="VARCHAR" />
		<result column="recruit_name" property="recruitName" jdbcType="VARCHAR" />
		<result column="recruit_mobile" property="recruitMobile" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="CheckWeightMap" type="java.util.Map">
		<result column="check_order" property="checkOrder" jdbcType="VARCHAR" />
		<result column="check_type" property="checkType" jdbcType="VARCHAR" />
		<result column="jt_id" property="jtId" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap type="com.yz.model.StudentHistory" id="HistoryInfoMap">
		<id column="learn_id" property="learnId" jdbcType="VARCHAR" />
		<result column="unvs_name" property="unvsName" jdbcType="VARCHAR" />
		<result column="profession" property="profession" jdbcType="VARCHAR" />
		<result column="graduate_time" property="graduateTime" jdbcType="VARCHAR" />
		<result column="diploma" property="diploma" jdbcType="VARCHAR" />
		<result column="edcs_type" property="edcsType" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 待完善的学员信息 -->
	<resultMap type="java.util.HashMap" id="CompleteStuInfoInfoMap">
		<result column="learn_id" property="learnId" jdbcType="VARCHAR" />
		<result column="std_id" property="stdId" jdbcType="VARCHAR" />
		<result column="std_name" property="stdName" jdbcType="VARCHAR" />
		<result column="grade" property="grade" jdbcType="VARCHAR" />
		<result column="is_data_completed" property="isDataCompleted" jdbcType="VARCHAR" />
		<result column="is_data_check" property="isDataCheck" jdbcType="VARCHAR" />
		<result column="annex_status" property="annexStatus" jdbcType="VARCHAR" />
		<result column="recruit_type" property="recruitType" jdbcType="VARCHAR" />
		<result column="id_card" property="idCard" jdbcType="VARCHAR" />
		<result column="id_type" property="id_type" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="rpr_province_code" property="rprProvinceCode" jdbcType="VARCHAR" />
		<result column="rpr_city_code" property="rprCityCode" jdbcType="VARCHAR" />
		<result column="rpr_district_code" property="rprDistrictCode" jdbcType="VARCHAR" />
		<result column="nation" property="nation" jdbcType="VARCHAR" />
		<result column="political_status" property="politicalStatus" jdbcType="VARCHAR" />
		<result column="rpr_type" property="rprType" jdbcType="VARCHAR" />
		<result column="now_province_code" property="nowProvinceCode" jdbcType="VARCHAR" />
		<result column="now_city_code" property="nowCityCode" jdbcType="VARCHAR" />
		<result column="now_district_code" property="nowDistrictCode" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="job_type" property="jobType" jdbcType="VARCHAR" />
		<result column="job_status" property="jobStatus" jdbcType="VARCHAR" />
		<result column="edcs_type" property="edcsType" jdbcType="VARCHAR" />
		<result column="unvs_name" property="unvsName" jdbcType="VARCHAR" />
		<result column="graduate_time" property="graduateTime" jdbcType="VARCHAR" />
		<result column="profession" property="profession" jdbcType="VARCHAR" />
		<result column="diploma" property="diploma" jdbcType="VARCHAR" />
		<result column="is_open_unvs" property="isOpenUnvs" jdbcType="VARCHAR" />
		<result column="marital_status" property="maritalStatus" jdbcType="VARCHAR" />
		<result column="study_type" property="studyType" jdbcType="VARCHAR" />
		<result column="material_code" property="materialCode" jdbcType="VARCHAR" />
		<result column="material_type" property="materialType" jdbcType="VARCHAR" />
		<result column="rpr_address_code" property="rprAddressCode" jdbcType="VARCHAR" />
		<association property="annexList" column="{learnId=learn_id,recruitType=recruit_type}" select="getAnnexList" />
		<association property="rejectReason" column="{learnId=learn_id,recruitType=recruit_type}" select="getRejectReason" />
	</resultMap>
	
	<resultMap id="AnnexListMap" type="java.util.HashMap" >
	    <result column="annex_id" property="annexId" jdbcType="VARCHAR" />
	    <result column="annex_type" property="annexType" jdbcType="VARCHAR" />
	    <result column="learn_id" property="learnId" jdbcType="VARCHAR" />
	    <result column="annex_name" property="annexName" jdbcType="VARCHAR" />
	    <result column="annex_url" property="annexUrl" jdbcType="VARCHAR" />
	    <result column="is_require" property="isRequire" jdbcType="VARCHAR" />
    </resultMap>
	
	
	<select id="getEnrollList" resultMap="EnrollInfoMap" parameterType="string">
		SELECT 
		  s.`std_name`,
		  s.`id_card`,
		  s.`nation`,
		  p.`pfsn_name`,
		  p.`pfsn_level`,
		  l.`recruit_type`,
		  u.`unvs_name`,
		  t.`ta_name`,
		  l.`learn_id`,
		  l.`grade`,
		  e.`emp_name` AS recruit_name,
		  e.`mobile` AS recruit_mobile 
		FROM
		  `bms`.bd_learn_info l 
		  LEFT JOIN `bms`.bd_student_info s 
		    ON s.`std_id` = l.`std_id` 
		  LEFT JOIN `bms`.bd_unvs_profession p 
		    ON p.`pfsn_id` = l.`pfsn_id` 
		  LEFT JOIN `bms`.bd_university u 
		    ON u.`unvs_id` = l.`unvs_id` 
		  LEFT JOIN `bms`.bd_test_area t 
		    ON t.ta_id = l.ta_id 
		  LEFT JOIN `bms`.bd_learn_rules r 
		    ON r.`learn_id` = l.`learn_id` 
		  LEFT JOIN `bms`.oa_employee e 
		    ON e.`emp_id` = r.`recruit` 
		where l.`std_id` = #{stdId, jdbcType=VARCHAR}
		  and l.`is_data_check` = '0'
	</select>
	
	
	
	
	<select id="getHistoryInfo" resultMap="HistoryInfoMap" parameterType="string">
		select 
		  h.`unvs_name`,
		  h.`profession`,
		  h.`graduate_time`,
		  h.`diploma`,
		  h.`learn_id`,
		  h.`edcs_type`
		from
		  `bms`.bd_student_history h 
		where h.`learn_id` = #{learnId, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertStudentHistory" parameterType="com.yz.model.StudentHistory">
		INSERT INTO bms.`bd_student_history`(
			learn_id,
			std_id,
			unvs_name,
			profession,
			graduate_time,
			diploma,
			edcs_type
		)values(
			#{learnId, jdbcType=VARCHAR},
			#{stdId, jdbcType=VARCHAR},
			#{unvsName, jdbcType=VARCHAR},
			#{profession, jdbcType=VARCHAR},
			STR_TO_DATE(#{graduateTime, jdbcType=VARCHAR}, '%Y-%m-%d'),
			#{diploma, jdbcType=VARCHAR},
			#{edcsType, jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 根据learnId查询需完善的学员信息资料 -->
	<select id="selectNeedCompleteStuInfo"  parameterType="java.lang.String" resultMap="CompleteStuInfoInfoMap">
		select 
			bli.learn_id,
			bli.recruit_type,
			bli.`is_data_completed`,
			bli.`annex_status`,
			bli.`is_data_check`,
			bli.`grade`,
			bsi.std_id,
			bsi.std_name,
			bsi.id_card,
			bsi.id_type,
			bsi.sex,
			bsi.birthday,
			bsi.mobile,
			bsi.rpr_province_code,
			bsi.rpr_city_code,
			bsi.rpr_district_code,
			bsi.nation,
			bsi.political_status,
			bsi.rpr_type,
			bsi.now_province_code,
			bsi.now_city_code,
			bsi.now_district_code,
			bsi.now_street_code,
			bsi.now_province_name,
			bsi.now_city_name,
			bsi.now_district_name,
			bsi.now_street_name,
			bsi.address,
			bsi.job_type,
			bsi.job_status,
			bsh.edcs_type,
			bsh.unvs_name,
			bsh.graduate_time,
			bsh.profession,
			bsh.diploma,
			bsh.is_open_unvs,
			bso.marital_status,
			bsh.study_type,
			bsh.material_type,
			bsh.material_code,
			bsi.rpr_address_code
		from bms.bd_learn_info bli
		left join bms.bd_student_info bsi on bli.std_id=bsi.std_id
		left join bms.bd_student_history bsh on bsh.learn_id=bli.learn_id
		left join bms.bd_student_other bso on bso.std_id=bli.std_id
		where bli.learn_id=#{learnId, jdbcType=VARCHAR}
	</select>
	<select id="getAnnexList" parameterType="java.util.Map" resultMap="AnnexListMap">
  		SELECT
			n.annex_id,
			n.annex_type,
			n.learn_id,
			n.annex_name,
			n.annex_url,
			n.is_require
		FROM
			bms.bd_learn_annex n 
		WHERE
			 n.learn_id = #{learnId, jdbcType=VARCHAR} and n.is_require='1'
			 <if test="recruitType != null and recruitType == '1'.toString()">
		  		and n.`annex_type` in ('1','2','3')
		     </if>
		     <if test="recruitType != null and recruitType == '2'.toString()">
		  		and n.`annex_type` ='5'
		     </if>
			ORDER BY n.annex_type;
    </select>
    
    <select id="getRejectReason"  parameterType="java.util.Map" resultType="java.util.HashMap">
  		select a.reason
		from (
	  		SELECT
				r.reason AS reason ,
				r.update_time AS updateTime
			FROM
				bms.bd_check_record r
				LEFT JOIN bms.bd_learn_info l ON l.`learn_id` = #{learnId, jdbcType=VARCHAR} 
			WHERE
				r.`mapping_id` = #{learnId, jdbcType=VARCHAR} 
				AND r.`cr_status` = '4' 
				AND r.`check_status` = '4' 
				AND r.`reason` != '' 
			UNION
			SELECT
				n.reason AS reason,
				n.check_time AS updateTime 
			FROM
				bms.bd_learn_annex_type d
				LEFT JOIN bms.bd_learn_annex n ON n.annex_type = d.annex_type_value 
				AND n.learn_id = #{learnId, jdbcType=VARCHAR} 
			WHERE
				d.recruit_type = #{recruitType, jdbcType=VARCHAR} 
				AND d.is_require = '1' 
				AND n.annex_status = '4'
			) AS a order by a.updateTime desc 
    </select>
	
	
	<update id="updateAnnex" >
		update 
		  `bms`.bd_student_annex a 
		set
		  a.`annex_url` = #{url, jdbcType=VARCHAR},
		  a.`annex_status` = '2' 
		where a.`std_id` = #{stdId, jdbcType=VARCHAR} 
		  and a.`annex_type` = #{annexType, jdbcType=VARCHAR}
	</update>
	
	<update id="updateAnnexStatus" parameterType="string">
		update `bms`.bd_student_info set my_annex_status = '2' where std_id = #{stdId, jdbcType=VARCHAR}
	</update>
	
	<update id="updateHistory" parameterType="com.yz.model.StudentHistory">
		update 
		  `bms`.`bd_student_history` 
		<set>
		  <if test="edcsType != null and '' != edcsType">
		  	`edcs_type` = #{edcsType, jdbcType=VARCHAR},
		  </if>
		  <if test="unvsName != null and '' != unvsName">
		  	`unvs_name` = #{unvsName, jdbcType=VARCHAR},
		  </if>
		  <if test="graduateTime != null and '' != graduateTime">
		  	`graduate_time` = str_to_date(#{graduateTime, jdbcType=VARCHAR}, '%Y-%m-%d'),
		  </if>
		  <if test="profession != null and '' != profession">
		  	`profession` = #{profession, jdbcType=VARCHAR},
		  </if>
		  <if test="diploma != null and '' != diploma">
		  	`diploma` = #{diploma, jdbcType=VARCHAR},
		  </if>
		  <if test="isOpenUnvs != null and '' != isOpenUnvs">
		  	`is_open_unvs` =#{isOpenUnvs, jdbcType=VARCHAR},
		  </if>
		  <if test="studyType != null and '' != studyType">
		  	`study_type` =#{studyType, jdbcType=VARCHAR},
		  </if>
		   <if test="materialType != null and '' != materialType">
		  	`material_type` =#{materialType, jdbcType=VARCHAR},
		  </if>
		   <if test="materialCode != null and '' != materialCode">
		  	`material_code` =#{materialCode, jdbcType=VARCHAR},
		  </if>
		 </set>
		where `learn_id` = #{learnId, jdbcType=VARCHAR}
	</update>
	
	<update id="updateBaseInfo" parameterType="com.yz.model.BdStudentBaseInfo">
		update bms.bd_student_info
		<set>
			<if test="stdName != null and '' != stdName">
				std_name = #{stdName,jdbcType=VARCHAR},
			</if>
			<if test="idType != null and '' != idType">
				id_type = #{idType,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null and '' != idCard">
				id_card = #{idCard,jdbcType=VARCHAR},
			</if>
			<if test="sex != null and '' != sex">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null and '' != birthday">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
			<if test="nation != null and '' != nation">
				nation = #{nation,jdbcType=VARCHAR},
			</if>
			<if test="politicalStatus != null and '' != politicalStatus">
				political_status = #{politicalStatus,jdbcType=VARCHAR},
			</if>
			<if test="rprType != null and '' != rprType">
				rpr_type = #{rprType,jdbcType=VARCHAR},
			</if>
			<if test="rprProvinceCode != null and '' != rprProvinceCode">
				rpr_province_code = #{rprProvinceCode,jdbcType=VARCHAR},
			</if>
			<if test="rprCityCode != null and '' != rprCityCode">
				rpr_city_code = #{rprCityCode,jdbcType=VARCHAR},
			</if>
			<if test="rprDistrictCode != null and '' != rprDistrictCode">
				rpr_district_code = #{rprDistrictCode,jdbcType=VARCHAR},
			</if>
			<if test="zipCode != null and '' != zipCode">
				zip_code = #{zipCode,jdbcType=VARCHAR},
			</if>
			<if test="nowProvinceCode != null and '' != nowProvinceCode">
				now_province_code = #{nowProvinceCode,jdbcType=VARCHAR},
			</if>
			<if test="nowCityCode != null and '' != nowCityCode">
				now_city_code = #{nowCityCode,jdbcType=VARCHAR},
			</if>
			<if test="nowDistrictCode != null and '' != nowDistrictCode">
				now_district_code = #{nowDistrictCode,jdbcType=VARCHAR},
			</if>
			<if test="nowStreetCode !=null and '' != nowStreetCode">
				now_street_code = #{nowStreetCode,jdbcType=VARCHAR},
			</if>
			<if test="nowProvinceName != null and '' != nowProvinceName">
				now_province_name = #{nowProvinceName,jdbcType=VARCHAR},
			</if>
			<if test="nowCityName != null and '' != nowCityName">
				now_city_name = #{nowCityName,jdbcType=VARCHAR},
			</if>
			<if test="nowDistrictName != null and '' != nowDistrictName">
				now_district_name = #{nowDistrictName,jdbcType=VARCHAR},
			</if>
			<if test="nowStreetName !=null and '' != nowStreetName">
				now_street_name = #{nowStreetName,jdbcType=VARCHAR},
			</if>
			<if test="address != null and '' != address">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="addressEditTime !=null and addressEditTime == '1'.toString()">
				address_edit_time = NOW(),
			</if>
			<if test="jobType != null and '' != jobType">
				job_type = #{jobType,jdbcType=VARCHAR},
			</if>
			<if test="jobStatus != null and '' != jobStatus">
				job_status = #{jobStatus,jdbcType=VARCHAR},
			</if>
			<if test="wpProvinceCode != null and '' != wpProvinceCode">
				wp_province_code = #{wpProvinceCode, jdbcType=VARCHAR},
			</if>
			<if test="wpCityCode != null and '' != wpCityCode">
				wp_city_code = #{wpCityCode, jdbcType=VARCHAR},
			</if>
			<if test="wpDistrictCode != null and '' != wpDistrictCode">
				wp_district_code = #{wpDistrictCode, jdbcType=VARCHAR},
			</if>
			<if test="wpAddress != null and '' != wpAddress">
				wp_address = #{wpAddress, jdbcType=VARCHAR},
			</if>
			<if test="wpTime != null and wpTime != ''">
				wp_time = str_to_date(#{wpTime, jdbcType=VARCHAR}, '%Y-%m-%d'),
			</if>
			<if test="wpTelephone != null and '' != wpTelephone">
				wp_telephone = #{wpTelephone, jdbcType=VARCHAR},
			</if>
			<if test="mobile != null and '' != mobile">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="emergencyContact != null and '' != emergencyContact">
				emergency_contact = #{emergencyContact,jdbcType=VARCHAR},
			</if>
			<if test="userId !=null  and '' != userId">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null and '' != updateUser">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null and '' != updateUserId">
				update_user_id = #{updateUserId,jdbcType=VARCHAR},
			</if>
		</set>
		where std_id = #{stdId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateStudentOther" parameterType="com.yz.model.BdStudentOther">
		update bms.bd_student_other
		<set>
			update_time = now(),
			<if test="headPortrait != null">
				head_portrait = #{headPortrait,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				telephone = #{telephone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				qq = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="wechat != null">
				wechat = #{wechat,jdbcType=VARCHAR},
			</if>
			<if test="jobTitle != null">
				job_title = #{jobTitle,jdbcType=VARCHAR},
			</if>
			<if test="maritalStatus != null">
				marital_status = #{maritalStatus,jdbcType=VARCHAR},
			</if>
			<if test="workPlace != null">
				work_place = #{workPlace,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId,jdbcType=VARCHAR},
			</if>
		</set>
		where std_id = #{stdId,jdbcType=VARCHAR}
	</update>
	
	<update id="testCompleted" parameterType="string">
		UPDATE `bms`.bd_learn_info SET is_test_completed = '1' WHERE learn_id = #{learnId, jdbcType=VARCHAR}
	</update>
	
	<update id="updateIsDataCompleted" parameterType="com.yz.model.student.BdLearnInfo" >
		UPDATE 
		  bms.bd_learn_info l 
		<set>
			<if test="isDataCompleted != null and isDataCompleted != ''">
				l.`is_data_completed` = #{isDataCompleted, jdbcType=VARCHAR},
			</if>
			<if test="isTestCompleted != null and isTestCompleted != ''">
				l.`is_test_completed` = #{isTestCompleted, jdbcType=VARCHAR},
			</if>
		</set>
		WHERE l.`learn_id` = #{learnId, jdbcType=VARCHAR} 
    </update>


	<select id="getStudentByMobile" resultType="java.util.HashMap" parameterType="string">
		select std_id, std_name, id_card, mobile
		from `bms`.bd_student_info where mobile = #{mobile, jdbcType=VARCHAR}
	</select>

	<select id="getStudentModify" resultType="java.util.HashMap" parameterType="string">
		SELECT
			a.std_name,
			a.id_card,
			b.grade,
			a.check_order,
			a.pfsn_id,
			a.new_pfsn_id,
			pro.pfsn_name,
			pro.pfsn_level,
			a.nation,
			a.sex,
			pro_new.pfsn_name npfsn_name,
			a.create_time,
			a.unvs_id,
			c.unvs_name,
			d.check_status,
			d.reason,
			a.ext_1
		FROM
			`bms`.bd_student_modify a
		LEFT JOIN `bms`.bd_learn_info b ON a.learn_id = b.learn_id
		LEFT JOIN `bms`.bd_university c ON a.unvs_id = c.unvs_id
		LEFT JOIN `bms`.bd_unvs_profession pro ON a.pfsn_id = pro.pfsn_id
		LEFT JOIN `bms`.bd_unvs_profession pro_new ON a.new_pfsn_id = pro_new.pfsn_id
		LEFT JOIN `bms`.bd_check_record d ON d.mapping_id = a.modify_id
		AND d.check_order = a.check_order
		WHERE
			a.modify_type = '6'
		AND d.check_type = '10'
		AND new_pfsn_id IS NOT NULL
		AND a.learn_id = #{learnId, jdbcType=VARCHAR}
		ORDER BY
			create_time DESC
		LIMIT 1
	</select>

	<select id="getStudentInfo" resultType="java.util.HashMap" parameterType="string">
		SELECT
		b.std_name,
		b.id_card,
		a.grade,
		d.pfsn_level,
		a.unvs_id,
		c.unvs_name,
		a.pfsn_id,
		d.pfsn_name,
		b.nation,
		b.sex
		FROM
			`bms`.bd_learn_info a
		LEFT JOIN `bms`.bd_student_info b ON a.std_id = b.std_id
		LEFT JOIN `bms`.bd_university c ON a.unvs_id = c.unvs_id
		LEFT JOIN `bms`.bd_unvs_profession d ON a.pfsn_id = d.pfsn_id
		WHERE a.learn_id = #{learnId, jdbcType=VARCHAR}
	</select>

	<insert id="addStudentModify" parameterType="com.yz.model.student.BdStudentModify">
		<selectKey resultType="java.lang.String" keyProperty="modifyId"
				   order="BEFORE">
			SELECT seq();
		</selectKey>
		insert into `bms`.bd_student_modify
		<trim prefix="(" suffix=")" suffixOverrides=",">
			modify_id,
			<if test="learnId != null and learnId != ''">
				learn_id,
			</if>
			<if test="stdId != null and stdId != ''">
				std_id,
			</if>
			<if test="modifyType != null and modifyType != ''">
				modify_type,
			</if>
			<if test="checkType != null and checkType != ''">
				check_type,
			</if>
			<if test="stdName != null and stdName != ''">
				std_name,
			</if>
			<if test="sex != null and sex != ''">
				sex,
			</if>
			<if test="idType != null and idType != ''">
				id_type,
			</if>
			<if test="nation != null and nation != ''">
				nation,
			</if>
			<if test="idCard != null and idCard != ''">
				id_card,
			</if>
			<if test="unvsId != null and unvsId != ''">
				unvs_id,
			</if>
			<if test="taId != null and taId != ''">
				ta_id,
			</if>
			<if test="pfsnId != null and pfsnId != ''">
				pfsn_id,
			</if>
			<if test="sg != null and sg != ''">
				sg,
			</if>
			<if test="scholarship != null and scholarship != ''">
				scholarship,
			</if>
			<if test="oldStdStage != null and oldStdStage != ''">
				old_std_stage,
			</if>
			<if test="newStdStage != null and newStdStage != ''">
				new_std_stage,
			</if>
			<if test="newStdName != null and newStdName != ''">
				new_std_name,
			</if>
			<if test="newSex != null and newSex != ''">
				new_sex,
			</if>
			<if test="newIdType != null and newIdType != ''">
				new_id_type,
			</if>
			<if test="newNation != null and newNation != ''">
				new_nation,
			</if>
			<if test="newIdCard != null and newIdCard != ''">
				new_id_card,
			</if>
			<if test="newUnvsId != null and newUnvsId != ''">
				new_unvs_id,
			</if>
			<if test="newTaId != null and newTaId != ''">
				new_ta_id,
			</if>
			<if test="newPfsnId != null and newPfsnId != ''">
				new_pfsn_id,
			</if>
			<if test="newSg != null and newSg != ''">
				new_sg,
			</if>
			<if test="newScholarship != null and newScholarship != ''">
				new_scholarship,
			</if>
			<if test="isDel != null and isDel != ''">
				is_del,
			</if>
			<if test="updateUser != null and updateUser != ''">
				update_user,
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				update_user_id,
			</if>
			<if test="createUserId != null and createUserId != ''">
				create_user_id,
			</if>
			<if test="createUser != null and createUser != ''">
				create_user,
			</if>
			<if test="checkOrder != null and checkOrder != ''">
				check_order,
			</if>
			<if test="ext1 != null and ext1 != ''">
				ext_1,
			</if>
			<if test="isComplete != null and isComplete != ''">
				is_complete,
			</if>
			update_time
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{modifyId,jdbcType=VARCHAR},
			<if test="learnId != null  and learnId != ''">
				#{learnId,jdbcType=VARCHAR},
			</if>
			<if test="stdId != null  and stdId != ''">
				#{stdId,jdbcType=VARCHAR},
			</if>
			<if test="modifyType != null  and modifyType != ''">
				#{modifyType,jdbcType=VARCHAR},
			</if>
			<if test="checkType != null  and checkType != ''">
				#{checkType,jdbcType=VARCHAR},
			</if>
			<if test="stdName != null  and stdName != ''">
				#{stdName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null  and sex != ''">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="idType != null and idType != ''">
				#{idType,jdbcType=VARCHAR},
			</if>
			<if test="nation != null and nation != ''">
				#{nation,jdbcType=VARCHAR},
			</if>
			<if test="idCard != null and idCard != ''">
				#{idCard,jdbcType=VARCHAR},
			</if>
			<if test="unvsId != null and unvsId != ''">
				#{unvsId,jdbcType=VARCHAR},
			</if>
			<if test="taId != null and taId != ''">
				#{taId,jdbcType=VARCHAR},
			</if>
			<if test="pfsnId != null and pfsnId != ''">
				#{pfsnId,jdbcType=VARCHAR},
			</if>
			<if test="sg != null and sg != ''">
				#{sg,jdbcType=VARCHAR},
			</if>
			<if test="oldStdStage != null and oldStdStage != ''">
				#{oldStdStage,jdbcType=VARCHAR},
			</if>
			<if test="newStdStage != null and newStdStage != ''">
				#{newStdStage,jdbcType=VARCHAR},
			</if>
			<if test="scholarship != null and scholarship != ''">
				#{scholarship,jdbcType=VARCHAR},
			</if>
			<if test="newStdName != null and newStdName != ''">
				#{newStdName,jdbcType=VARCHAR},
			</if>
			<if test="newSex != null and newSex != ''">
				#{newSex,jdbcType=VARCHAR},
			</if>
			<if test="newIdType != null and newIdType != ''">
				#{newIdType,jdbcType=VARCHAR},
			</if>
			<if test="newNation != null and newNation != ''">
				#{newNation,jdbcType=VARCHAR},
			</if>
			<if test="newIdCard != null and newIdCard != ''">
				#{newIdCard,jdbcType=VARCHAR},
			</if>
			<if test="newUnvsId != null and newUnvsId != ''">
				#{newUnvsId,jdbcType=VARCHAR},
			</if>
			<if test="newTaId != null and newTaId != ''">
				#{newTaId,jdbcType=VARCHAR},
			</if>
			<if test="newPfsnId != null and newPfsnId != ''">
				#{newPfsnId,jdbcType=VARCHAR},
			</if>
			<if test="newSg != null and newSg != ''">
				#{newSg,jdbcType=VARCHAR},
			</if>
			<if test="newScholarship != null and newScholarship != ''">
				#{newScholarship,jdbcType=VARCHAR},
			</if>
			<if test="isDel != null and isDel != ''">
				#{isDel,jdbcType=CHAR},
			</if>
			<if test="updateUser != null and updateUser != ''">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null and updateUserId != ''">
				#{updateUserId,jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null and createUserId != ''">
				#{createUserId,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null and createUser != ''">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="checkOrder != null and checkOrder != ''">
				#{checkOrder,jdbcType=VARCHAR},
			</if>
			<if test="ext1 != null and ext1 != ''">
				#{ext1,jdbcType=VARCHAR},
			</if>
			<if test="isComplete != null and isComplete != ''">
				#{isComplete,jdbcType=VARCHAR},
			</if>
			now()
		</trim>
	</insert>

	<select id="getCheckWeight" resultMap="CheckWeightMap"
			parameterType="java.lang.String">
		SELECT check_order,check_type,jt_id FROM `bms`.bd_check_weight
		WHERE
		check_type = #{stdStage,jdbcType=VARCHAR}
	</select>

	<insert id="addBdCheckRecord" parameterType="com.yz.model.student.BdCheckRecord" >
		insert into `bms`.bd_check_record
		<trim prefix="(" suffix=")" suffixOverrides="," >
			cr_id,
			<if test="mappingId != null" >
				mapping_id,
			</if>
			<if test="empId != null" >
				emp_id,
			</if>
			<if test="checkStatus != null" >
				check_status,
			</if>
			<if test="reason != null" >
				reason,
			</if>
			<if test="checkOrder != null" >
				check_order,
			</if>
			<if test="checkType != null" >
				check_type,
			</if>
			<if test="crStatus != null" >
				cr_status,
			</if>
			<if test="updateTime != null" >
				update_time,
			</if>
			<if test="updateUser != null" >
				update_user,
			</if>
			<if test="updateUserId != null" >
				update_user_id,
			</if>
			<if test="ext1 != null" >
				ext_1,
			</if>
			<if test="ext2 != null" >
				ext_2,
			</if>
			<if test="ext3 != null" >
				ext_3,
			</if>
			<if test="jtId != null" >
				jt_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			seq(),
			<if test="mappingId != null" >
				#{mappingId,jdbcType=VARCHAR},
			</if>
			<if test="empId != null" >
				#{empId,jdbcType=VARCHAR},
			</if>
			<if test="checkStatus != null" >
				#{checkStatus,jdbcType=VARCHAR},
			</if>
			<if test="reason != null" >
				#{reason,jdbcType=VARCHAR},
			</if>
			<if test="checkOrder != null" >
				#{checkOrder,jdbcType=VARCHAR},
			</if>
			<if test="checkType != null" >
				#{checkType,jdbcType=VARCHAR},
			</if>
			<if test="crStatus != null" >
				#{crStatus,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null" >
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null" >
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null" >
				#{updateUserId,jdbcType=VARCHAR},
			</if>
			<if test="ext1 != null" >
				#{ext1,jdbcType=VARCHAR},
			</if>
			<if test="ext2 != null" >
				#{ext2,jdbcType=VARCHAR},
			</if>
			<if test="ext3 != null" >
				#{ext3,jdbcType=VARCHAR},
			</if>
			<if test="jtId != null" >
				#{jtId,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<select id="countYMStudent" resultType="java.lang.Integer">
		SELECT
		count(*)
		FROM
			`bms`.bd_learn_info
		WHERE
			grade = '2018'
		AND inclusion_status = 2
		AND scholarship IN ('15', '16', '17', '22')
		AND learn_id = #{learnId, jdbcType=VARCHAR}
	</select>
	
	<select id="getUserIdByStdId" resultType="java.lang.String">
		SELECT user_id from bms.`bd_student_info` where std_id=#{stdId,jdbcType=VARCHAR} limit 1;
	</select>
	
	<update id="updateUserIdByStdId">
		update bms.`bd_student_info` set user_id=#{userId,jdbcType=VARCHAR} where std_id=#{stdId,jdbcType=VARCHAR}
	</update>
	
	<update id="updateStdMobileByStdId">
		update bms.`bd_student_info` set mobile=#{mobile,jdbcType=VARCHAR} where std_id=#{stdId,jdbcType=VARCHAR}
	</update>

	<!-- 信息确认的学员信息 -->
	<resultMap type="java.util.HashMap" id="ConfirmStuInfo">
		<result column="learn_id" property="learnId" jdbcType="VARCHAR" />
		<result column="std_id" property="stdId" jdbcType="VARCHAR" />
		<result column="std_name" property="stdName" jdbcType="VARCHAR" />
		<result column="id_card" property="idCard" jdbcType="VARCHAR" />
		<result column="nation" property="nation" jdbcType="VARCHAR" />
		<result column="unvs_name" property="unvsName" jdbcType="VARCHAR" />
		<result column="pfsn_name" property="pfsnName" jdbcType="VARCHAR" />
		<result column="pfsn_level" property="pfsnLevel" jdbcType="VARCHAR" />
		<result column="ta_name" property="taName" jdbcType="VARCHAR" />
		<result column="rpr_province_code" property="rprProvinceCode" jdbcType="VARCHAR" />
		<result column="rpr_city_code" property="rprCityCode" jdbcType="VARCHAR" />
		<result column="rpr_district_code" property="rprDistrictCode" jdbcType="VARCHAR" />
		<result column="rpr_type" property="rprType" jdbcType="VARCHAR" />
		<result column="edcs_type" property="edcsType" jdbcType="VARCHAR" />
		<result column="former" property="formerUn" jdbcType="VARCHAR" />
		<result column="graduate_time" property="graduateTime" jdbcType="VARCHAR" />
		<result column="profession" property="profession" jdbcType="VARCHAR" />
		<result column="diploma" property="diploma" jdbcType="VARCHAR" />
		<association property="annexList" column="learn_id" select="getAnnexList2" />
	</resultMap>

	<!-- 根据learnId查询信息确认的学员信息 -->
	<select id="getConfirmStuInfo"  parameterType="java.lang.String" resultMap="ConfirmStuInfo">
		select
		bli.learn_id,
		bsi.std_id,
		bsi.std_name,
		bsi.id_card,
		bsi.nation,
		bu.unvs_name,
		bup.pfsn_name,
		bup.pfsn_level,
		bta.ta_name,
		bsi.rpr_province_code,
		bsi.rpr_city_code,
		bsi.rpr_district_code,
		bsi.rpr_type,
		bsh.edcs_type,
		bsh.unvs_name former,
		bsh.graduate_time,
		bsh.profession,
		bsh.diploma
		FROM bms.bd_learn_info bli
		LEFT JOIN bms.bd_student_info bsi ON bli.std_id=bsi.std_id
		LEFT JOIN bms.bd_student_history bsh ON bsh.learn_id=bli.learn_id
		LEFT JOIN bms.bd_university bu ON bu.unvs_id = bli.unvs_id
		LEFT JOIN bms.bd_unvs_profession bup ON bup.pfsn_id = bli.pfsn_id
		LEFT JOIN bms.bd_test_area bta ON bta.ta_id = bli.ta_id
		where bli.learn_id=#{learnId, jdbcType=VARCHAR}
	</select>

	<select id="getAnnexList2" resultType="java.util.HashMap">
	SELECT
      a.recruit_type recruitType,
      a.annex_type_name annexName,
      a.annex_type_value annexType,
      a.is_require isRequire,
      a.is_upload isUpload,
      c.annex_url annexUrl,
      c.annex_status annexStatus,
      c.annex_id
      FROM
      bms.bd_learn_annex_type a
      LEFT JOIN bms.bd_learn_info b ON a.recruit_type = b.recruit_type
      LEFT JOIN bms.bd_learn_annex c ON b.learn_id = c.learn_id AND a.annex_type_value = c.annex_type
      WHERE a.`annex_type_value` in ('1','2','3') AND b.learn_id = #{learnId}
      ORDER BY a.annex_type_value;
	</select>
	<select id="getSysDictByPidAndV" resultType="java.lang.String">
		SELECT dict_name FROM bms.`sys_dict` WHERE p_id = #{pId} AND dict_value = #{value} limit 1;
	</select>
</mapper>