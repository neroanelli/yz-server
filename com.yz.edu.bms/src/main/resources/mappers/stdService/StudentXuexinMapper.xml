<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yz.dao.stdService.StudentXuexinMapper">

	<resultMap type="com.yz.model.stdService.StudentXuexinInfo" id="StudentXuexinMap">
		<result column="xuexin_id" property="xuexinId" jdbcType="VARCHAR"/>
		<result column="task_title" property="taskTitle" jdbcType="VARCHAR"/>
		<result column="school_roll" property="schoolRoll" jdbcType="VARCHAR"/>
		<result column="std_no" property="stdNo" jdbcType="VARCHAR"/>
		<result column="std_name" property="stdName" jdbcType="VARCHAR"/>
		<result column="grade" property="grade" jdbcType="VARCHAR"/>
		<result column="unvs_name" property="unvsName" jdbcType="VARCHAR"/>
		<result column="pfsn_code" property="pfsnCode" jdbcType="VARCHAR"/>
		<result column="pfsn_name" property="pfsnName" jdbcType="VARCHAR"/>
		<result column="pfsn_level" property="pfsnLevel" jdbcType="VARCHAR"/>
		<result column="std_stage" property="stdStage" jdbcType="VARCHAR"/>
		<result column="is_view" property="isView" jdbcType="VARCHAR"/>
		<result column="view_time" property="viewTime" jdbcType="VARCHAR"/>
		<result column="is_error" property="isError" jdbcType="VARCHAR"/>
		<result column="feedback" property="feedback" jdbcType="VARCHAR"/>
		<result column="emp_name" property="tutor" jdbcType="VARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="id_card" property="idCard" jdbcType="VARCHAR"/>
		<result column="task_id" property="taskId" jdbcType="VARCHAR"/>
		<result column="learn_id" property="learnId" jdbcType="VARCHAR"/>
		<result column="is_reset" property="isReset" jdbcType="VARCHAR"/>
	</resultMap>
	
	<select id="findAllXuexinList" resultMap="StudentXuexinMap">
		SELECT
		a.xuexin_id,
		d.task_title,
		b.std_no,
		b.school_roll,
		c.std_name,
		c.id_card,
		b.grade,
		g.unvs_name,
		h.pfsn_code,
		h.pfsn_level,
		h.pfsn_name,
		b.std_stage,
		a.is_view,
		date_format(a.view_time,'%Y-%m-%d %H:%i:%S') view_time,
		a.is_error,
		a.feedback,
		f.emp_name,
		a.is_reset,
		a.remark,
		a.task_id,
		a.learn_id
		FROM
		oa_student_xuexin_task a
		LEFT JOIN bd_learn_info b ON a.learn_id = b.learn_id
		LEFT JOIN bd_student_info c ON b.std_id = c.std_id
		LEFT JOIN oa_task_info d ON a.task_id = d.task_id
		LEFT JOIN bd_learn_rules e ON a.learn_id = e.learn_id
		LEFT JOIN oa_employee f ON e.tutor = f.emp_id
		LEFT JOIN bd_university g ON b.unvs_id = g.unvs_id
		LEFT JOIN bd_unvs_profession h ON b.pfsn_id = h.pfsn_id
		WHERE 1=1
			<if test="queryInfo.xuexinId !=null and '' != queryInfo.xuexinId">
				and a.`xuexin_id` = #{queryInfo.xuexinId,jdbcType=VARCHAR}
			</if>
		  	<if test="queryInfo.stdName !=null and '' != queryInfo.stdName">
		  		and c.`std_name` like concat('%',#{queryInfo.stdName,jdbcType=VARCHAR},'%')
		  	</if>
			<if test="queryInfo.stdNo !=null and '' != queryInfo.stdNo">
				and b.`std_no` like concat('%',#{queryInfo.stdNo,jdbcType=VARCHAR},'%')
			</if>
			<if test="queryInfo.schoolRoll !=null and '' != queryInfo.schoolRoll">
				and b.`school_roll` like concat('%',#{queryInfo.schoolRoll,jdbcType=VARCHAR},'%')
			</if>
		  	<if test="queryInfo.idCard !=null and '' != queryInfo.idCard">
		  		and c.`id_card` like concat('%',#{queryInfo.idCard,jdbcType=VARCHAR},'%')
		  	</if>
			<if test="queryInfo.remark !=null and '' != queryInfo.remark">
				and a.`remark` like concat('%',#{queryInfo.remark,jdbcType=VARCHAR},'%')
			</if>
			<if test="queryInfo.taskId !=null and '' != queryInfo.taskId">
				and a.`task_id` = #{queryInfo.taskId,jdbcType=VARCHAR}
			</if>
			<if test="queryInfo.recruitType !=null and '' != queryInfo.recruitType">
				and b.`recruit_type` = #{queryInfo.recruitType,jdbcType=VARCHAR}
			</if>
		  	<if test="queryInfo.grade !=null and '' != queryInfo.grade">
		  		and b.`grade` = #{queryInfo.grade,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.unvsId !=null and '' != queryInfo.unvsId">
		  		and b.`unvs_id` = #{queryInfo.unvsId,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.pfsnLevel !=null and '' != queryInfo.pfsnLevel">
		  		and h.`pfsn_level` = #{queryInfo.pfsnLevel,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.pfsnId !=null and '' != queryInfo.pfsnId">
		  		and b.`pfsn_id` = #{queryInfo.pfsnId,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.isView !=null and '' != queryInfo.isView">
		  		and a.`is_view` = #{queryInfo.isView,jdbcType=VARCHAR}
		  	</if>
			<if test="queryInfo.isReset !=null and '' != queryInfo.isReset">
				and a.`is_reset` = #{queryInfo.isReset,jdbcType=VARCHAR}
			</if>
		  	<if test="queryInfo.tutor !=null and '' != queryInfo.tutor">
		  		and f.emp_name like concat('%',#{queryInfo.tutor,jdbcType=VARCHAR},'%')
		  	</if>
			<if test="queryInfo.isError !=null and '' != queryInfo.isError">
				and ifnull(a.`is_error`,'--') = #{queryInfo.isError,jdbcType=VARCHAR}
			</if>
			<if test="queryInfo.isRemark !=null and '' != queryInfo.isRemark">
				<if test="queryInfo.isRemark == 0">
					and a.remark is null
				</if>
				<if test="queryInfo.isRemark == 1">
					and LENGTH(a.remark)>0
				</if>
			</if>
			<if test="queryInfo.startTime != null and queryInfo.startTime != ''">
				AND a.`view_time` >= #{queryInfo.startTime,jdbcType=VARCHAR}
			</if>
			<if test="queryInfo.endTime != null and queryInfo.endTime != ''">
				AND a.`view_time` &lt;= #{queryInfo.endTime,jdbcType=VARCHAR}
			</if>
			<if test="user.userLevel != 1">
				<choose>
					<when test="user.userLevel == 6">
						and e.tutor = #{user.empId, jdbcType=VARCHAR}
					</when>
					<otherwise>
						and e.tutor = #{user.empId, jdbcType=VARCHAR}
					</otherwise>
				</choose>
			</if>
		order by a.create_time desc
	</select>

	<update id="updateRemark">
		UPDATE oa_student_xuexin_task SET remark= #{remark,jdbcType=VARCHAR}
		WHERE xuexin_Id =#{xuexinId,jdbcType=VARCHAR}
	</update>

	<update id="resetTask">
		UPDATE oa_student_xuexin_task SET is_view=0,view_time=NULL,
		is_error = NULL,feedback=NULL,
		is_reset = 1,
		reset_time=now()
		WHERE xuexin_Id = #{xuexinId,jdbcType=VARCHAR};
		UPDATE oa_student_task set task_status = 0
		WHERE task_id = #{taskId,jdbcType=VARCHAR} and learn_id = #{learnId,jdbcType=VARCHAR};
	</update>

	<select id="getNonExistsStudent" resultType="java.util.Map">
		DROP TEMPORARY TABLE IF EXISTS tmp_student_xuexin;
		CREATE TEMPORARY TABLE tmp_student_xuexin (
		std_name VARCHAR (50),
		school_roll VARCHAR (50),
		std_no VARCHAR (50));
		INSERT INTO tmp_student_xuexin (
		std_name,
		school_roll,
		std_no
		)
		VALUES
		<foreach collection="studentXuexinInfoList" item="info" separator=",">
			(
			#{info.stdName, jdbcType=VARCHAR},
			#{info.schoolRoll, jdbcType=VARCHAR},
			#{info.stdNo, jdbcType=VARCHAR}
			)
		</foreach>;
		SELECT
		d.std_name,
		d.school_roll,
		a.xuexin_id
		FROM
		oa_student_xuexin_task a
		LEFT JOIN bd_learn_info b ON a.learn_id = b.learn_id
		LEFT JOIN bd_student_info c ON b.std_id = c.std_id
		RIGHT JOIN tmp_student_xuexin d ON d.std_name = c.std_name
		AND d.school_roll = b.school_roll
		AND d.std_no = b.school_roll
		WHERE
		xuexin_id IS NULL;
	</select>

	<insert id="insert">
		DROP TEMPORARY TABLE IF EXISTS tmp_student_xuexin;
		CREATE TEMPORARY TABLE tmp_student_xuexin (
		std_name VARCHAR (50),
		school_roll VARCHAR (50),
		std_no VARCHAR (50),
		is_view VARCHAR(10),
		view_time varchar(50),
		is_error varchar(10),
		feedback varchar(1000),
		remark varchar(1000)
		);
		INSERT INTO tmp_student_xuexin
		VALUES
		<foreach collection="studentXuexinInfoList" item="info" separator=",">
			(
			#{info.stdName, jdbcType=VARCHAR},
			#{info.schoolRoll, jdbcType=VARCHAR},
			#{info.stdNo, jdbcType=VARCHAR},
			#{info.isView, jdbcType=VARCHAR},
			#{info.viewTime, jdbcType=VARCHAR},
			#{info.isError, jdbcType=VARCHAR},
			#{info.feedback, jdbcType=VARCHAR},
			#{info.remark, jdbcType=VARCHAR}
			)
		</foreach>;
		UPDATE oa_student_xuexin_task a
		JOIN bd_learn_info b ON a.learn_id = b.learn_id
		JOIN bd_student_info c ON b.std_id = c.std_id
		JOIN tmp_student_xuexin d ON d.std_name = c.std_name
		AND d.school_roll = b.school_roll
		AND d.std_no = b.std_no
		SET a.is_view = d.is_view,
		a.view_time = d.view_time,
		a.is_error = d.is_error,
		a.feedback = d.feedback,
		a.remark = d.remark,
		a.update_time = now(),
		a.update_user= #{user.realName, jdbcType=VARCHAR},
		a.update_user_id= #{user.userId, jdbcType=VARCHAR};
	</insert>
	
	<insert id="singleAddStuXueXinInfo" parameterType="com.yz.model.stdService.StudentXuexinInfo">
		INSERT INTO oa_student_xuexin_task (xuexin_id,task_id,learn_Id,create_time) 
        VALUES(#{xuexinId,jdbcType=VARCHAR},
               #{taskId,jdbcType=VARCHAR},
               #{learnId,jdbcType=VARCHAR},
               now())
	</insert>
	
	<delete id="aloneDelStuXueXinInfo">
		delete from oa_student_xuexin_task
		where task_id=#{taskId,jdbcType=VARCHAR} 
		  and learn_id =#{learnId,jdbcType=VARCHAR}
	</delete>
	
	<insert id="addStuXueXinInfo">
		INSERT INTO oa_student_xuexin_task (xuexin_id,task_id,learn_Id,create_time) 
        VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.xuexinId,jdbcType=VARCHAR},
			 #{item.taskId, jdbcType=VARCHAR},
			 #{item.learnId,jdbcType=VARCHAR},
			 NOW())
		</foreach>
	</insert>
	
	<delete id="delStuXueXinInfo">
		delete from oa_student_xuexin_task
		where task_id=#{taskId,jdbcType=VARCHAR} and learn_id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id, jdbcType=CHAR}
		</foreach>
	</delete>
	
</mapper>
