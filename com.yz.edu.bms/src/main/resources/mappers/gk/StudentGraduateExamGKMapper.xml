<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.dao.gk.StudentGraduateExamGKMapper">
    
    <resultMap type="com.yz.model.gk.StudentGraduateExamGKInfo" id="StudentGraduateExamGKMap">
		<result column="follow_id" property="followId" jdbcType="VARCHAR"/>
		<result column="task_title" property="taskTitle" jdbcType="VARCHAR"/>
		<result column="notification" property="notification" jdbcType="VARCHAR"/>
		<result column="learn_id" property="learnId" jdbcType="VARCHAR"/>
		<result column="id_card" property="idCard" jdbcType="VARCHAR"/>
		<result column="school_roll" property="schoolRoll" jdbcType="VARCHAR"/>
		<result column="std_no" property="stdNo" jdbcType="VARCHAR"/>
		<result column="std_name" property="stdName" jdbcType="VARCHAR"/>
		<result column="grade" property="grade" jdbcType="VARCHAR"/>
		<result column="unvs_name" property="unvsName" jdbcType="VARCHAR"/>
		<result column="pfsn_code" property="pfsnCode" jdbcType="VARCHAR"/>
		<result column="pfsn_name" property="pfsnName" jdbcType="VARCHAR"/>
		<result column="pfsn_level" property="pfsnLevel" jdbcType="VARCHAR"/>
		<result column="std_stage" property="stdStage" jdbcType="VARCHAR"/>
		<result column="view_time" property="viewTime" jdbcType="VARCHAR"/>
		<result column="is_view" property="isView" jdbcType="VARCHAR"/>
		<result column="emp_name" property="tutor" jdbcType="VARCHAR"/>
		<result column="task_id" property="taskId" jdbcType="VARCHAR"/>
		<result column="is_reset" property="isReset" jdbcType="VARCHAR"/>
		<association property="subinfos" column="follow_id" select="selectSubInfo" />
	</resultMap>
	
	<resultMap type="com.yz.model.gk.StudentGraduateExamGKInfoSub"
		id="subInfoResultMap">
		<result column="follow_id" property="followId" />
		<result column="test_area" property="testArea" />
		<result column="is_payreg" property="isPayreg" />
		<result column="enroll_subject" property="enrollSubject" />
		<result column="test_time" property="testTime" />
		<result column="test_address" property="testAddress" />
		<result column="is_test" property="isTest" />
		<result column="is_pass" property="isPass" />
		<result column="is_ccaa" property="isCcaa" />
	</resultMap>

	<select id="findStudentGraduateExamGKList" parameterType="com.yz.model.gk.StudentGraduateExamGkQuery" resultMap="StudentGraduateExamGKMap">
		SELECT
		a.follow_id,
		oti.task_title,
		a.notification,
		bli.std_no,
		bli.school_roll,
		bsi.std_name,
		bsi.id_card,
		bli.grade,
		u.unvs_name,
		p.pfsn_code,
		p.pfsn_level,
		p.pfsn_name,
		bli.std_stage,
		date_format(a.view_time,'%Y-%m-%d %H:%i:%S') view_time,
		a.is_view,
		a.is_reset,
		oe.emp_name,
		a.remark,
		a.task_id,
		a.learn_id
		FROM
		oa_student_graduateexam_gk_task a
		LEFT JOIN bd_learn_info bli ON a.learn_id = bli.learn_id
		LEFT JOIN bd_student_info bsi ON bli.std_id = bsi.std_id
		LEFT JOIN oa_task_info oti ON a.task_id = oti.task_id
		LEFT JOIN bd_learn_rules blr ON a.learn_id = blr.learn_id
		LEFT JOIN oa_employee oe ON blr.tutor = oe.emp_id
		LEFT JOIN bd_university u ON bli.unvs_id = u.unvs_id
		LEFT JOIN bd_unvs_profession p ON bli.pfsn_id = p.pfsn_id
		LEFT JOIN oa_student_graduateexam_gk_task_sub sub ON sub.follow_id = a.follow_id
		
		WHERE 1=1
		<if test="queryInfo.followId!=null and '' != queryInfo.followId">
			and a.`follow_id` = #{queryInfo.followId,jdbcType=VARCHAR}
		</if>
	  	<if test="queryInfo.stdName !=null and '' != queryInfo.stdName">
	  		and bsi.`std_name` like concat('%',#{queryInfo.stdName,jdbcType=VARCHAR},'%')
	  	</if>
		<if test="queryInfo.schoolRoll !=null and '' != queryInfo.schoolRoll">
			and bli.`school_roll` like concat('%',#{queryInfo.schoolRoll,jdbcType=VARCHAR},'%')
		</if>
	  	<if test="queryInfo.idCard !=null and '' != queryInfo.idCard">
	  		and bsi.`id_card` like concat('%',#{queryInfo.idCard,jdbcType=VARCHAR},'%')
	  	</if>
		<if test="queryInfo.taskId !=null and '' != queryInfo.taskId">
			and a.`task_id` = #{queryInfo.taskId,jdbcType=VARCHAR}
		</if>
	  	<if test="queryInfo.grade !=null and '' != queryInfo.grade">
	  		and bli.`grade` = #{queryInfo.grade,jdbcType=VARCHAR}
	  	</if>
	  	<if test="queryInfo.unvsId !=null and '' != queryInfo.unvsId">
	  		and bli.`unvs_id` = #{queryInfo.unvsId,jdbcType=VARCHAR}
	  	</if>
	  	<if test="queryInfo.pfsnLevel !=null and '' != queryInfo.pfsnLevel">
	  		and p.`pfsn_level` = #{queryInfo.pfsnLevel,jdbcType=VARCHAR}
	  	</if>
	  	<if test="queryInfo.pfsnId !=null and '' != queryInfo.pfsnId">
	  		and bli.`pfsn_id` = #{queryInfo.pfsnId,jdbcType=VARCHAR}
	  	</if>
	  	<if test="queryInfo.tutor !=null and '' != queryInfo.tutor">
	  		and oe.emp_name like concat('%',#{queryInfo.tutor,jdbcType=VARCHAR},'%')
	  	</if>
	  	<if test="queryInfo.notification !=null and '' != queryInfo.notification">
			and a.`notification` = #{queryInfo.notification,jdbcType=VARCHAR}
		</if>
		<if test="queryInfo.isPayreg !=null and '' != queryInfo.isPayreg">
	  		and sub.is_payreg = #{queryInfo.isPayreg,jdbcType=VARCHAR}
	  	</if>
	  	<if test="queryInfo.enrollSubject!=null and '' != queryInfo.enrollSubject">
	  		and sub.enroll_subject = #{queryInfo.enrollSubject,jdbcType=VARCHAR}
	  	</if>
	  	<if test="queryInfo.testAddress !=null and '' != queryInfo.testAddress">
	  		and sub.test_address like concat('%',#{queryInfo.testAddress,jdbcType=VARCHAR},'%')
	  	</if>
	  	<if test="queryInfo.testArea !=null and '' != queryInfo.testArea">
	  		and sub.test_area like concat('%',#{queryInfo.testArea,jdbcType=VARCHAR},'%')
	  	</if>	
	  	<if test="queryInfo.testTime !=null and '' != queryInfo.testTime">
	  		and sub.`test_time` = #{queryInfo.testTime,jdbcType=VARCHAR}
	  	</if>
		<if test="queryInfo.isTest !=null and '' != queryInfo.isTest">
			and sub.`is_test` = #{queryInfo.isTest,jdbcType=VARCHAR}
		</if>
		<if test="queryInfo.isPass !=null and '' != queryInfo.isPass">
			and sub.`is_pass` = #{queryInfo.isPass,jdbcType=VARCHAR}
		</if>
		<if test="queryInfo.isRemark !=null and queryInfo.isRemark == '1'.toString()">
			and LENGTH(a.`remark`)>0
		</if>
		<if test="queryInfo.isRemark !=null and queryInfo.isRemark == '0'.toString()">
			and (a.`remark` is null or a.`remark`= '')
		</if>
		
		<if test="user.userLevel != 1">
			<choose>
				<when test="user.userLevel == 6">
					and blr.tutor = #{user.empId, jdbcType=VARCHAR}
				</when>
				<otherwise>
					and blr.tutor = #{user.empId, jdbcType=VARCHAR}
				</otherwise>
			</choose>
		</if>
		GROUP BY(a.`follow_id`) 
		order by a.create_time desc
	</select>
	
	<select id="getStudentGraduateExamGkCount" parameterType="com.yz.model.gk.StudentGraduateExamGkQuery" resultType="int">
		SELECT COUNT(0) FROM (
			SELECT
			a.follow_id,
			a.learn_id
			FROM
			oa_student_graduateexam_gk_task a
			LEFT JOIN bd_learn_info bli ON a.learn_id = bli.learn_id
			LEFT JOIN bd_student_info bsi ON bli.std_id = bsi.std_id
			LEFT JOIN oa_task_info oti ON a.task_id = oti.task_id
			LEFT JOIN bd_learn_rules blr ON a.learn_id = blr.learn_id
			LEFT JOIN oa_employee oe ON blr.tutor = oe.emp_id
			LEFT JOIN bd_university u ON bli.unvs_id = u.unvs_id
			LEFT JOIN bd_unvs_profession p ON bli.pfsn_id = p.pfsn_id
			LEFT JOIN oa_student_graduateexam_gk_task_sub sub ON sub.follow_id = a.follow_id
			
			WHERE 1=1
			<if test="queryInfo.followId!=null and '' != queryInfo.followId">
				and a.`follow_id` = #{queryInfo.followId,jdbcType=VARCHAR}
			</if>
		  	<if test="queryInfo.stdName !=null and '' != queryInfo.stdName">
		  		and bsi.`std_name` like concat('%',#{queryInfo.stdName,jdbcType=VARCHAR},'%')
		  	</if>
			<if test="queryInfo.schoolRoll !=null and '' != queryInfo.schoolRoll">
				and bli.`school_roll` like concat('%',#{queryInfo.schoolRoll,jdbcType=VARCHAR},'%')
			</if>
		  	<if test="queryInfo.idCard !=null and '' != queryInfo.idCard">
		  		and bsi.`id_card` like concat('%',#{queryInfo.idCard,jdbcType=VARCHAR},'%')
		  	</if>
			<if test="queryInfo.taskId !=null and '' != queryInfo.taskId">
				and a.`task_id` = #{queryInfo.taskId,jdbcType=VARCHAR}
			</if>
		  	<if test="queryInfo.grade !=null and '' != queryInfo.grade">
		  		and bli.`grade` = #{queryInfo.grade,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.unvsId !=null and '' != queryInfo.unvsId">
		  		and bli.`unvs_id` = #{queryInfo.unvsId,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.pfsnLevel !=null and '' != queryInfo.pfsnLevel">
		  		and p.`pfsn_level` = #{queryInfo.pfsnLevel,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.pfsnId !=null and '' != queryInfo.pfsnId">
		  		and bli.`pfsn_id` = #{queryInfo.pfsnId,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.tutor !=null and '' != queryInfo.tutor">
		  		and oe.emp_name like concat('%',#{queryInfo.tutor,jdbcType=VARCHAR},'%')
		  	</if>
		  	<if test="queryInfo.notification !=null and '' != queryInfo.notification">
				and a.`notification` = #{queryInfo.notification,jdbcType=VARCHAR}
			</if>
			<if test="queryInfo.isPayreg !=null and '' != queryInfo.isPayreg">
		  		and sub.is_payreg = #{queryInfo.isPayreg,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.enrollSubject!=null and '' != queryInfo.enrollSubject">
		  		and sub.enroll_subject = #{queryInfo.enrollSubject,jdbcType=VARCHAR}
		  	</if>
		  	<if test="queryInfo.testAddress !=null and '' != queryInfo.testAddress">
		  		and sub.test_address like concat('%',#{queryInfo.testAddress,jdbcType=VARCHAR},'%')
		  	</if>
		  	<if test="queryInfo.testArea !=null and '' != queryInfo.testArea">
		  		and sub.test_area like concat('%',#{queryInfo.testArea,jdbcType=VARCHAR},'%')
		  	</if>	
		  	<if test="queryInfo.testTime !=null and '' != queryInfo.testTime">
		  		and sub.`test_time` = #{queryInfo.testTime,jdbcType=VARCHAR}
		  	</if>
			<if test="queryInfo.isTest !=null and '' != queryInfo.isTest">
				and sub.`is_test` = #{queryInfo.isTest,jdbcType=VARCHAR}
			</if>
			<if test="queryInfo.isPass !=null and '' != queryInfo.isPass">
				and sub.`is_pass` = #{queryInfo.isPass,jdbcType=VARCHAR}
			</if>
			<if test="queryInfo.isRemark !=null and queryInfo.isRemark == '1'.toString()">
				and LENGTH(a.`remark`)>0
			</if>
			<if test="queryInfo.isRemark !=null and queryInfo.isRemark == '0'.toString()">
				and (a.`remark` is null or a.`remark`= '')
			</if>
			
			<if test="user.userLevel != 1">
				<choose>
					<when test="user.userLevel == 6">
						and blr.tutor = #{user.empId, jdbcType=VARCHAR}
					</when>
					<otherwise>
						and blr.tutor = #{user.empId, jdbcType=VARCHAR}
					</otherwise>
				</choose>
			</if>
			GROUP BY(a.`follow_id`) 
		) temp_t
	</select>
	
	<select id="selectSubInfo" parameterType="java.lang.String"
		resultMap="subInfoResultMap">
		SELECT
		gt.`test_area`,
		gt.`is_payreg`,
		gt.`enroll_subject`,
		date_format(gt.`test_time`,'%Y-%m-%d %H:%i:%S') test_time,
		gt.`test_address`,
		gt.`is_test`,
		gt.`is_pass`,
		gt.`is_ccaa`
		FROM
		oa_student_graduateexam_gk_task_sub gt
		WHERE gt.`follow_id` = #{follow_id}
	</select>
	
	
	<update id="updateRemark">
		UPDATE oa_student_graduateexam_gk_task SET remark= #{remark,jdbcType=VARCHAR}
		WHERE follow_id =#{followId,jdbcType=VARCHAR}
	</update>
	
	<select id="getStudentGraduateExamGKById" resultMap="StudentGraduateExamGKMap">
		SELECT
			a.follow_id,
			a.task_id
		FROM
			oa_student_graduateexam_gk_task a
			where a.learn_id=#{learnId,jdbcType=VARCHAR} limit 1
	</select>
	
	<insert id="addStuGkUnifiedExamInfo">
		INSERT INTO oa_student_graduateexam_gk_task (follow_id,task_id,learn_Id,create_time) 
        VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.followId, jdbcType=VARCHAR},
			 #{item.taskId, jdbcType=VARCHAR},
			 #{item.learnId,jdbcType=VARCHAR},
			 NOW())
		</foreach>
	</insert>
	
	 <update id="updateGkUnifiedExamList" parameterType="java.util.List">  
	        <foreach close="" collection="list" index="index" item="item" open="" separator=";">  
		        update oa_student_graduateexam_gk_task
				<set>
					<if test="item.taskId !=null and '' != item.taskId">
						task_id = #{item.taskId,jdbcType=VARCHAR},
					</if>
				</set>
				where follow_id = #{item.followId,jdbcType=VARCHAR}
		   </foreach>  
    </update>  
    
    <insert id="addStuGkUnifiedExamSubInfo">
    	INSERT INTO oa_student_graduateexam_gk_task_sub (id,follow_id,enroll_subject) 
        VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.id, jdbcType=VARCHAR},
			 #{item.followId, jdbcType=VARCHAR},
			 #{item.enrollSubject,jdbcType=VARCHAR})
		</foreach>
    </insert>
    
    <delete id="delStuGkUnifiedExamSubInfo">
		delete from oa_student_graduateexam_gk_task_sub
		where follow_id in (select follow_id FROM oa_student_graduateexam_gk_task
			where task_id=#{taskId,jdbcType=VARCHAR} and learn_id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id, jdbcType=CHAR}
		</foreach>);
		delete from oa_student_graduateexam_gk_task
		where task_id=#{taskId,jdbcType=VARCHAR} and learn_id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id, jdbcType=CHAR}
		</foreach>
	</delete>
	
	<insert id="singleAddStuUnifiedExamInfo">
		INSERT INTO oa_student_graduateexam_gk_task (follow_id,task_id,learn_Id,create_time) 
        VALUES (#{followId, jdbcType=VARCHAR},
			 #{taskId, jdbcType=VARCHAR},
			 #{learnId,jdbcType=VARCHAR},
			 NOW())
	</insert>
	
	<update id="singleUpdateStuUnifiedExamInfo">
	  update oa_student_graduateexam_gk_task
		<set>
			<if test="item.taskId !=null and '' != item.taskId">
				task_id = #{item.taskId,jdbcType=VARCHAR},
			</if>
		</set>
		where follow_id = #{item.followId,jdbcType=VARCHAR}
	</update>
	
	<delete id="aloneDelStuGkUnifiedExamInfo">
		delete from oa_student_graduateexam_gk_task_sub
		where follow_id in (select follow_id FROM oa_student_graduateexam_gk_task
			where task_id=#{taskId,jdbcType=VARCHAR} and learn_id =#{learnId,jdbcType=VARCHAR});
		delete from oa_student_graduateexam_gk_task
		where task_id=#{taskId,jdbcType=VARCHAR} and learn_id =#{learnId,jdbcType=VARCHAR};
	</delete>
</mapper>