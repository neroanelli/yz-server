<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.dao.admin.BmsFuncMapper" >
  <resultMap id="BaseResultMap" type="com.yz.model.admin.BmsFunc" >
    <id column="func_id" property="funcId" jdbcType="VARCHAR" />
    <result column="func_name" property="funcName" jdbcType="VARCHAR" />
    <result column="func_type" property="funcType" jdbcType="CHAR" />
    <result column="func_url" property="funcUrl" jdbcType="VARCHAR" />
    <result column="func_code" property="funcCode" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="VARCHAR"/>
  </resultMap>
  <resultMap type="com.yz.model.admin.BmsFuncResponse" id="MenuAndFuncResult" extends="BaseResultMap">
  	<association property="funcs" column="func_id" select="selectSecondMenu" />
  </resultMap>
  <resultMap type="com.yz.model.admin.BmsFuncResponse" id="SecondMenuResult" extends="BaseResultMap">
  	<association property="funcs" column="func_id" select="selectFuncsByPid" />
  </resultMap>
  <sql id="Base_Column_List" >
    func_id, func_name, func_type, func_url, func_code, p_id, update_user_id, update_user, icon, order_num
  </sql>
  <select id="selectFuncCodeIsExist" resultType="java.lang.Integer">
  	select count(1) from bms_func yf where
  	func_code = #{funcCode}
  	<if test="oldFuncCode != null">
  		and func_code != #{oldFuncCode}
  	</if>
  </select>
  <select id="selectFuncNameIsExist" resultType="java.lang.Integer">
  	select count(1) from bms_func yf where func_name = #{funcName}
  	<if test="oldFuncName != null">  
            and func_name != #{oldFuncName}
    </if>
  </select>
  <select id="selectFuncsByPid" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT 
	  <include refid="Base_Column_List" />
	FROM
	  bms_func yf 
	where yf.p_id = #{funcId} and yf.func_type = 3
  </select>
  <select id="selectSecondMenu" parameterType="java.lang.String" resultMap="SecondMenuResult">
  	SELECT 
	  <include refid="Base_Column_List" />
	FROM
	  bms_func yf 
	where yf.p_id = #{funcId} and yf.func_type = 2
	order by yf.order_num
  </select>
  <select id="selectMenuAndFuncs" resultMap="MenuAndFuncResult" >
  	SELECT 
	  <include refid="Base_Column_List" />
	FROM
	  bms_func yf 
	where yf.func_type = 1
	order by yf.order_num
  </select>
  <select id="selectAllFunc" resultMap="BaseResultMap" parameterType="com.yz.model.admin.BmsFunc">
  	SELECT 
	  yf.`func_id`,
	  yf.`func_name`,
	  yf.`func_type`,
	  yf.`func_code`,
	  yf.`func_url`,
	  yf.`p_id`,
	  yf.update_user_id,
	  yf.update_user,
	  yf.`order_num`
	FROM
	  bms_func yf 
	where 
	 	'1' = '1' 
         <if test="funcName != null  and funcName != ''">  
             and func_name LIKE CONCAT('%',#{funcName}, '%')
         </if>  
         <if test="funcType != null and funcType != ''">  
             and func_type = #{funcType}
         </if>
         <if test="funcId != null and funcId != ''">  
             and func_id = #{funcId}
         </if>
         <if test="funcCode != null and funcCode != ''">  
             and func_code LIKE CONCAT('%',#{funcCode}, '%')
         </if> 
         <if test="pId != null and pId != ''">  
             and p_id = #{pId}
         </if>     
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bms_func
    where func_id = #{funcId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bms_func
    where func_id = #{funcId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yz.model.admin.BmsFunc" >
    insert into bms_func (func_id, func_name, func_type, 
      func_url, func_code, p_id,update_user,update_user_id,order_num
      )
    values (#{funcId}, #{funcName,jdbcType=VARCHAR}, #{funcType,jdbcType=CHAR}, 
      #{funcUrl,jdbcType=VARCHAR}, #{funcCode,jdbcType=VARCHAR}, #{pId,jdbcType=VARCHAR},
      #{updateUser,jdbcType=VARCHAR},#{updateUserId,jdbcType=VARCHAR},#{orderNum,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yz.model.admin.BmsFunc" >
    insert into bms_func
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="funcId != null" >
        func_id,
      </if>
      <if test="funcName != null" >
        func_name,
      </if>
      <if test="funcType != null" >
        func_type,
      </if>
      <if test="funcUrl != null" >
        func_url,
      </if>
      <if test="funcCode != null" >
        func_code,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="funcId != null" >
        #{funcId,jdbcType=VARCHAR},
      </if>
      <if test="funcName != null" >
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcType != null" >
        #{funcType,jdbcType=CHAR},
      </if>
      <if test="funcUrl != null" >
        #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcCode != null" >
        #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yz.model.admin.BmsFunc" >
    update bms_func
    <set >
      <if test="funcName != null" >
        func_name = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcType != null" >
        func_type = #{funcType,jdbcType=CHAR},
      </if>
      <if test="funcUrl != null" >
        func_url = #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcCode != null" >
        func_code = #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="orderNum !=null and '' != orderNum">
      	order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
    </set>
    where func_id = #{funcId,jdbcType=VARCHAR} 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yz.model.admin.BmsFunc" >
    update bms_func
    set func_name = #{funcName,jdbcType=VARCHAR},
      func_type = #{funcType,jdbcType=CHAR},
      func_url = #{funcUrl,jdbcType=VARCHAR},
      func_code = #{funcCode,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR}
    where func_id = #{funcId,jdbcType=VARCHAR}
  </update>
</mapper>