<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.dao.sceneMng.NetToAccountMapper">

	  <resultMap id="BaseUserResultMap" type="com.yz.model.admin.BmsUserResponse" >
	  	 <id column="user_id" property="userId" jdbcType="VARCHAR" />
	  	 <result column="user_name" property="userName" jdbcType="VARCHAR" />
	  	 <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
	  	 <result column="real_name" property="realName" jdbcType="VARCHAR" />
	  	 <result column="is_block" property="isBlock" jdbcType="VARCHAR" />
	  	 <result column="call_num_city" property="callNumCity" jdbcType="VARCHAR"/>
	  	 <result column="sign_city" property="signCity" jdbcType="VARCHAR"/>
	  	 <result column="net_value" property="netValue" jdbcType="VARCHAR"/>
	  	 <result column="sign_count" property="signCount" jdbcType="VARCHAR"/>
	  </resultMap>
	<select id="queryUserList" resultMap="BaseUserResultMap" parameterType="com.yz.model.admin.BmsUser">
			select 
			  bu.`user_id`,
			  bu.`user_name`,
			  bu.`user_pwd`,
			  bu.`is_block`,
			  sc.`city_name` call_num_city,
			  scd.`city_name` sign_city,
			  acan.`attr_value` net_value,
			  (SELECT COUNT(0) FROM bms.bd_student_scene_confirm bssc WHERE bssc.sign_user_id=bu.user_id) sign_count  
			from
			  bms.`bms_user` bu 
			  LEFT JOIN common.`ats_customize_attr` aca
			  ON aca.`ref_handler` = bu.`user_id` AND aca.`ref_type`='NetWorkExam'
			  AND aca.`attr_name`='callNumberAddr'
			  LEFT JOIN bms.`sys_city` sc ON sc.`city_code` = aca.`attr_value`
			  LEFT JOIN common.`ats_customize_attr` acad
			  ON acad.`ref_handler` = bu.`user_id` AND acad.`ref_type`='NetWorkExam'
			  AND acad.`attr_name`='signAddr'
			  LEFT JOIN bms.`sys_city` scd ON scd.`city_code` = acad.`attr_value` 
			  LEFT JOIN common.`ats_customize_attr` acan
			  ON acan.`ref_handler` = bu.`user_id` AND acan.`ref_type`='NetWorkExam'
			  AND acan.`attr_name`='netExam'  
			where 
	  		bu.module='2'
	  		 <if test="userName != null and userName != ''">  
	             and bu.user_name LIKE CONCAT('%', CONCAT(#{userName}, '%'))
	         </if> 
	         <if test="isBlock != null and isBlock != ''">  
            	 and bu.is_block = #{isBlock}
         	 </if>  
	         order by bu.create_time desc
	  </select>	
	  
	<update id="editUser" parameterType="com.yz.model.admin.BmsUser" >
    update bms_user
    <set >
      <if test="userName != null and userName != ''" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null and userPwd != ''" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
       <if test="isBlock != null and isBlock != ''" >
        is_block = #{isBlock,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null and updateUserId != ''" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null and updateUser != ''" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="checkUserNameIsExist" resultType="java.lang.Integer">
  	select count(1) from bms_user bu where bu.`user_name` = #{userName,jdbcType=VARCHAR} and bu.`module`='2'
  	<if test="oldUserName != null and oldUserName != ''">
  		and bu.`user_name` != #{oldUserName,jdbcType=VARCHAR}
  	</if>
  </select>
    <insert id="insertUser" parameterType="com.yz.model.admin.BmsUserResponse" >
    insert into bms_user (user_id, user_name,real_name, user_pwd, update_user_id, update_user,module)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},#{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
    	#{updateUserId,jdbcType=VARCHAR},#{updateUser,jdbcType=VARCHAR},#{module,jdbcType=VARCHAR}
    );
    <if test="attrList.size() >0">
	    insert into common.`ats_customize_attr`(ref_type,ref_handler,attr_name,attr_desc,attr_value,attr_seq)
		values
		<foreach collection="attrList" item="item" index="index" separator="," >  
	       	(#{item.defCatalog},#{userId},#{item.defName},#{item.defLabel},#{item.attrValue},#{item.attrSeq})
	   	</foreach>
    </if>
  </insert>
  
  <select id="selectUserById" parameterType="java.lang.String" resultMap="BaseUserResultMap">
    SELECT 
	  user_id,
	  user_name,
	  user_pwd,
	  is_block 
	FROM
	  bms.bms_user bu 
    WHERE bu.user_id=#{userId}
  </select>
  <update id="updateUser">
  	update bms_user
    <set >
      <if test="userName != null and userName != ''" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null and userPwd != ''" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
       <if test="isBlock != null and isBlock != ''" >
        is_block = #{isBlock,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null and updateUserId != ''" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null and updateUser != ''" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR};
    delete from common.`ats_customize_attr` where ref_type='NetWorkExam' and ref_handler=#{userId,jdbcType=VARCHAR};
    <if test="attrList.size() >0">
	    insert into common.`ats_customize_attr`(ref_type,ref_handler,attr_name,attr_desc,attr_value,attr_seq)
		values
		<foreach collection="attrList" item="item" index="index" separator="," >  
	       	(#{item.defCatalog},#{userId},#{item.defName},#{item.defLabel},#{item.attrValue},#{item.attrSeq})
	   	</foreach>
    </if>
  </update>
</mapper>